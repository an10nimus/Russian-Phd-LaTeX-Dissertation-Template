%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Mayura Draw, Version 4.5
%%Title: asymm_theta_6curves.md
%%CreationDate: Wed May 16 10:59:11 2018
%%BoundingBox: 46 410 595 707
%%DocumentFonts: Times-Roman
%%+ Symbol
%%EndComments
%%BeginProlog
%%BeginResource: procset MayuraDraw_ops
%%Version: 4.5
%%Copyright: (c) 1993-2003 Mayura Software
/PDXDict 100 dict def
PDXDict begin
% width height matrix proc key cache
% definepattern -\> font
/definepattern { %def
  7 dict begin
    /FontDict 9 dict def
    FontDict begin
      /cache exch def
      /key exch def
      /proc exch cvx def
      /mtx exch matrix invertmatrix def
      /height exch def
      /width exch def
      /ctm matrix currentmatrix def
      /ptm matrix identmatrix def
      /str
      (xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)
      def
    end
    /FontBBox [ %def
      0 0 FontDict /width get
      FontDict /height get
    ] def
    /FontMatrix FontDict /mtx get def
    /Encoding StandardEncoding def
    /FontType 3 def
    /BuildChar { %def
      pop begin
      FontDict begin
        width 0 cache { %ifelse
          0 0 width height setcachedevice
        }{ %else
          setcharwidth
        } ifelse
        0 0 moveto width 0 lineto
        width height lineto 0 height lineto
        closepath clip newpath
        gsave proc grestore
      end end
    } def
    FontDict /key get currentdict definefont
  end
} bind def

% dict patternpath -
% dict matrix patternpath -
/patternpath { %def
  dup type /dicttype eq { %ifelse
    begin FontDict /ctm get setmatrix
  }{ %else
    exch begin FontDict /ctm get setmatrix
    concat
  } ifelse
  currentdict setfont
  FontDict begin
    FontMatrix concat
    width 0 dtransform
    round width div exch round width div exch
    0 height dtransform
    round height div exch
    round height div exch
    0 0 transform round exch round exch
    ptm astore setmatrix

    pathbbox
    height div ceiling height mul 4 1 roll
    width div ceiling width mul 4 1 roll
    height div floor height mul 4 1 roll
    width div floor width mul 4 1 roll

    2 index sub height div ceiling cvi exch
    3 index sub width div ceiling cvi exch
    4 2 roll moveto

    FontMatrix ptm invertmatrix pop
    { %repeat
      gsave
        ptm concat
        dup str length idiv { %repeat
          str show
        } repeat
        dup str length mod str exch
        0 exch getinterval show
      grestore
      0 height rmoveto
    } repeat
    pop
  end end
} bind def

% dict patternfill -
% dict matrix patternfill -
/patternfill { %def
  gsave
    eoclip patternpath
  grestore
  newpath
} bind def

/img { %def
  gsave
  /imgh exch def
  /imgw exch def
  concat
  imgw imgh 8
  [imgw 0 0 imgh neg 0 imgh]
  /colorstr 768 string def
  /colorimage where {
    pop
    { currentfile colorstr readhexstring pop }
    false 3 colorimage
  }{
    /graystr 256 string def
    {
      currentfile colorstr readhexstring pop
      length 3 idiv
      dup 1 sub 0 1 3 -1 roll
      {
        graystr exch
        colorstr 1 index 3 mul get 30 mul
        colorstr 2 index 3 mul 1 add get 59 mul
        colorstr 3 index 3 mul 2 add get 11 mul
        add add 100 idiv
        put
      } for
      graystr 0 3 -1 roll getinterval
    } image
  } ifelse
  grestore
} bind def

/arrowhead {
  gsave
    [] 0 setdash
    strokeC strokeM strokeY strokeK setcmykcolor
    2 copy moveto
    4 2 roll exch 4 -1 roll exch
    sub 3 1 roll sub
    exch atan rotate dup scale
    arrowtype
    dup 0 eq {
      -1 2 rlineto 7 -2 rlineto -7 -2 rlineto
      closepath fill
    } if
    dup 1 eq {
      0 3 rlineto 9 -3 rlineto -9 -3 rlineto
      closepath fill
    } if
    dup 2 eq {
      -6 -6 rmoveto 6 6 rlineto -6 6 rlineto
      -1.4142 -1.4142 rlineto 4.5858 -4.5858 rlineto
      -4.5858 -4.5858 rlineto closepath fill
    } if
    dup 3 eq {
      -6 0 rmoveto -1 2 rlineto 7 -2 rlineto -7 -2 rlineto
      closepath fill
    } if
    dup 4 eq {
      -9 0 rmoveto 0 3 rlineto 9 -3 rlineto -9 -3 rlineto
      closepath fill
    } if
    dup 5 eq {
      currentpoint newpath 3 0 360 arc
      closepath fill
    } if
    dup 6 eq {
      2.5 2.5 rmoveto 0 -5 rlineto -5 0 rlineto 0 5 rlineto
      closepath fill
    } if
    pop
  grestore
} bind def

/setcmykcolor where { %ifelse
  pop
}{ %else
  /setcmykcolor {
     /black exch def /yellow exch def
     /magenta exch def /cyan exch def
     cyan black add dup 1 gt { pop 1 } if 1 exch sub
     magenta black add dup 1 gt { pop 1 } if 1 exch sub
     yellow black add dup 1 gt { pop 1 } if 1 exch sub
     setrgbcolor
  } bind def
} ifelse

/RE { %def
  findfont begin
  currentdict dup length dict begin
    { %forall
      1 index /FID ne { def } { pop pop } ifelse
    } forall
    /FontName exch def dup length 0 ne { %if
      /Encoding Encoding 256 array copy def
      0 exch { %forall
        dup type /nametype eq { %ifelse
          Encoding 2 index 2 index put
          pop 1 add
        }{ %else
          exch pop
        } ifelse
      } forall
    } if pop
  currentdict dup end end
  /FontName get exch definefont pop
} bind def

/spacecount { %def
  0 exch
  ( ) { %loop
    search { %ifelse
      pop 3 -1 roll 1 add 3 1 roll
    }{ pop exit } ifelse
  } loop
} bind def

/WinAnsiEncoding [
  39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase
  /ellipsis/dagger/daggerdbl/circumflex/perthousand
  /Scaron/guilsinglleft/OE 145/quoteleft/quoteright
  /quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/dotlessi
  159/Ydieresis 164/currency 166/brokenbar 168/dieresis/copyright
  /ordfeminine 172/logicalnot 174/registered/macron/ring
  177/plusminus/twosuperior/threesuperior/acute/mu
  183/periodcentered/cedilla/onesuperior/ordmasculine
  188/onequarter/onehalf/threequarters 192/Agrave/Aacute
  /Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
  /Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute
  /Ocircumflex/Otilde/Odieresis/multiply/Oslash
  /Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
  /germandbls/agrave/aacute/acircumflex/atilde/adieresis
  /aring/ae/ccedilla/egrave/eacute/ecircumflex
  /edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde
  /odieresis/divide/oslash/ugrave/uacute/ucircumflex
  /udieresis/yacute/thorn/ydieresis
] def

/SymbolEncoding [
  32/space/exclam/universal/numbersign/existential/percent
  /ampersand/suchthat/parenleft/parenright/asteriskmath/plus
  /comma/minus/period/slash/zero/one/two/three/four/five/six
  /seven/eight/nine/colon/semicolon/less/equal/greater/question
  /congruent/Alpha/Beta/Chi/Delta/Epsilon/Phi/Gamma/Eta/Iota
  /theta1/Kappa/Lambda/Mu/Nu/Omicron/Pi/Theta/Rho/Sigma/Tau
  /Upsilon/sigma1/Omega/Xi/Psi/Zeta/bracketleft/therefore
  /bracketright/perpendicular/underscore/radicalex/alpha
  /beta/chi/delta/epsilon/phi/gamma/eta/iota/phi1/kappa/lambda
  /mu/nu/omicron/pi/theta/rho/sigma/tau/upsilon/omega1/omega
  /xi/psi/zeta/braceleft/bar/braceright/similar
  161/Upsilon1/minute/lessequal/fraction/infinity/florin/club
  /diamond/heart/spade/arrowboth/arrowleft/arrowup/arrowright
  /arrowdown/degree/plusminus/second/greaterequal/multiply
  /proportional/partialdiff/bullet/divide/notequal/equivalence
  /approxequal/ellipsis/arrowvertex/arrowhorizex/carriagereturn
  /aleph/Ifraktur/Rfraktur/weierstrass/circlemultiply
  /circleplus/emptyset/intersection/union/propersuperset
  /reflexsuperset/notsubset/propersubset/reflexsubset/element
  /notelement/angle/gradient/registerserif/copyrightserif
  /trademarkserif/product/radical/dotmath/logicalnot/logicaland
  /logicalor/arrowdblboth/arrowdblleft/arrowdblup/arrowdblright
  /arrowdbldown/lozenge/angleleft/registersans/copyrightsans
  /trademarksans/summation/parenlefttp/parenleftex/parenleftbt
  /bracketlefttp/bracketleftex/bracketleftbt/bracelefttp
  /braceleftmid/braceleftbt/braceex
  241/angleright/integral/integraltp/integralex/integralbt
  /parenrighttp/parenrightex/parenrightbt/bracketrighttp
  /bracketrightex/bracketrightbt/bracerighttp/bracerightmid
  /bracerightbt
] def

/patarray [
/leftdiagonal /rightdiagonal /crossdiagonal /horizontal
/vertical /crosshatch /fishscale /wave /brick
] def
/arrowtype 0 def
/fillC 0 def /fillM 0 def /fillY 0 def /fillK 0 def
/strokeC 0 def /strokeM 0 def /strokeY 0 def /strokeK 1 def
/pattern -1 def
/mat matrix def
/mat2 matrix def
/nesting 0 def
/deferred /N def
/c /curveto load def
/c2 { pop pop c } bind def
/C /curveto load def
/C2 { pop pop C } bind def
/e { gsave concat 0 0 moveto } bind def
/F {
  nesting 0 eq { %ifelse
    pattern -1 eq { %ifelse
      fillC fillM fillY fillK setcmykcolor eofill
    }{ %else
      gsave fillC fillM fillY fillK setcmykcolor eofill grestore
      0 0 0 1 setcmykcolor
      patarray pattern get findfont patternfill
    } ifelse
  }{ %else
    /deferred /F def
  } ifelse
} bind def
/f { closepath F } bind def
/K { /strokeK exch def /strokeY exch def
     /strokeM exch def /strokeC exch def } bind def
/k { /fillK exch def /fillY exch def
     /fillM exch def /fillC exch def } bind def
/opc { pop } bind def
/Opc { pop } bind def
/L /lineto load def
/L2 { pop pop L } bind def
/m /moveto load def
/m2 { pop pop m } bind def
/n /newpath load def
/N {
  nesting 0 eq { %ifelse
    newpath
  }{ %else
    /deferred /N def
  } ifelse
} def
/S {
  nesting 0 eq { %ifelse
    strokeC strokeM strokeY strokeK setcmykcolor stroke
  }{ %else
    /deferred /S def
  } ifelse
} bind def
/s { closepath S } bind def
/Tx { fillC fillM fillY fillK setcmykcolor show
      0 leading neg translate 0 0 moveto } bind def
/T { grestore } bind def
/TX { pop } bind def
/Ts { pop } bind def
/tal { pop } bind def
/tld { pop } bind def
/tbx { pop exch pop sub /jwidth exch def } def
/tpt { %def
  fillC fillM fillY fillK setcmykcolor
  moveto show
} bind def
/tpj { %def
  fillC fillM fillY fillK setcmykcolor
  moveto
  dup stringwidth pop
  3 -1 roll
  exch sub
  1 index spacecount
  dup 0 eq { %ifelse
    pop pop show
  }{ %else
    div 0 8#040 4 -1 roll widthshow
  } ifelse
} bind def
/u {} def
/U {} def
/*u { /nesting nesting 1 add def } def
/*U {
  /nesting nesting 1 sub def
  nesting 0 eq {
    deferred cvx exec
  } if
} def
/w /setlinewidth load def
/d /setdash load def
/B {
  nesting 0 eq { %ifelse
    gsave F grestore S
  }{ %else
    /deferred /B def
  } ifelse
} bind def
/b { closepath B } bind def
/z { /align exch def pop /leading exch def exch findfont
     exch scalefont setfont } bind def
/tfn { exch findfont
     exch scalefont setfont } bind def
/Pat { /pattern exch def } bind def
/cm { 6 array astore concat } bind def
/q { mat2 currentmatrix pop } bind def
/Q { mat2 setmatrix } bind def
/Ah {
  pop /arrowtype exch def
  currentlinewidth 5 1 roll arrowhead
} bind def
/Arc {
  mat currentmatrix pop
    translate scale 0 0 1 5 -2 roll arc
  mat setmatrix
} bind def
/Arc2 { pop pop Arc } bind def
/Bx {
  mat currentmatrix pop
    concat /y1 exch def /x1 exch def /y2 exch def /x2 exch def
    x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
  mat setmatrix
} bind def
/Rr {
  mat currentmatrix pop
    concat /yrad exch def /xrad exch def
    2 copy gt { exch } if /x2 exch def /x1 exch def
    2 copy gt { exch } if /y2 exch def /y1 exch def
    x1 xrad add y2 moveto
    matrix currentmatrix x1 xrad add y2 yrad sub translate xrad yrad scale
    0 0 1 90 -180 arc setmatrix
    matrix currentmatrix x1 xrad add y1 yrad add translate xrad yrad scale
    0 0 1 180 270 arc setmatrix
    matrix currentmatrix x2 xrad sub y1 yrad add translate xrad yrad scale
    0 0 1 270 0 arc setmatrix
    matrix currentmatrix x2 xrad sub y2 yrad sub translate xrad yrad scale
    0 0 1 0 90 arc setmatrix
    closepath
  mat setmatrix
} bind def
/Ov {
  mat currentmatrix pop
    concat translate scale 1 0 moveto 0 0 1 0 360 arc closepath
  mat setmatrix
} bind def
end
%%EndResource
%%EndProlog
%%BeginSetup
%PDX g 3 3 0 0
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
PDXDict begin
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
/_PDX_savepage save def

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/rightdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/leftdiagonal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  2 setlinewidth stroke
} bind
/horizontal true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/vertical true definepattern pop

15 15 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 15 7.5 lineto
  7.5 0 moveto 7.5 15 lineto
  2 setlinewidth stroke
} bind
/crosshatch true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 setlinecap
  0 7.5 moveto 30 7.5 lineto
  0 22.5 moveto 30 22.5 lineto
  7.5 0 moveto 7.5 7.5 lineto
  7.5 22.5 moveto 7.5 30 lineto
  22.5 7.5 moveto 22.5 22.5 lineto
  1 setlinewidth stroke
} bind
/brick true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  2 setlinecap
  7.5 0 moveto 15 7.5 lineto
  0 7.5 moveto 7.5 15 lineto
  7.5 0 moveto 0 7.5 lineto
  15 7.5 moveto 7.5 15 lineto
  0.5 setlinewidth stroke
} bind
/crossdiagonal true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  2 2 scale
  1 setlinecap
  0 7.5 moveto 0 15 7.5 270 360 arc
  7.5 15 moveto 15 15 7.5 180 270 arc
  0 7.5 moveto 7.5 7.5 7.5 180 360 arc
  0.5 setlinewidth stroke
} bind
/fishscale true definepattern pop

30 30 [300 72 div 0 0 300 72 div 0 0]
{ %definepattern
  1 setlinecap 0.5 setlinewidth
  7.5 0 10.6 135 45 arcn
  22.5 15 10.6 225 315 arc
  stroke
  7.5 15 10.6 135 45 arcn
  22.5 30 10.6 225 315 arc
  stroke
} bind
/wave true definepattern pop

WinAnsiEncoding /_Times-Roman /Times-Roman RE
SymbolEncoding /_Symbol /Symbol RE

newpath 2 setlinecap 0 setlinejoin 2 setmiterlimit
[] 0 setdash
32 397 moveto 32 719 lineto 603 719 lineto 603 397 lineto closepath clip
newpath
%%EndPageSetup
1 1 1 0 k
1 w
q
0.3 0 0 0.3 13.55 414.7 cm
254.918 882.723 m
280.637 831.453 308.414 781.219 338.168 732.18 c
353.465 706.973 369.285 682.07 386.168 657.902 c
409.957 623.852 435.844 591.27 463.418 560.203 c
488.43 532.023 514.848 505.078 542.918 479.945 c
571.375 454.473 601.508 430.883 632.918 409.156 c
669.738 383.695 708.332 360.789 748.418 340.863 c
788.648 320.875 830.355 303.898 872.918 289.523 c
916.57 274.777 961.16 262.758 1006.42 254.129 c
1053.91 245.082 1102.11 239.777 1150.42 238.18 c
1219.44 235.895 1288.66 241.168 1356.67 253.133 c
1395.14 259.902 1433.25 268.813 1470.67 280.051 c
1515.02 293.375 1558.38 309.969 1600.42 329.402 c
1630.19 343.164 1659.31 358.359 1687.42 375.262 c
1712.98 390.633 1737.67 407.402 1761.67 425.113 c
1789.52 445.656 1816.45 467.484 1841.92 490.914 c
1861.85 509.238 1880.88 528.547 1898.92 548.738 c
Q
S
0.964706 1 1 0 k
0.964706 1 1 0 K
q
0.3 0 0 0.3 13.55 414.7 cm
254.918 882.227 m
267.945 853.922 281.449 825.832 295.418 797.98 c
314.484 759.969 334.434 722.375 356.168 685.82 c
380.66 644.633 407.438 604.762 437.168 567.18 c
460.766 537.355 486.203 509.004 512.918 481.941 c
534.727 459.848 557.402 438.602 581.168 418.633 c
615.855 389.488 652.832 363.105 691.418 339.371 c
729.969 315.664 770.129 294.594 811.418 276.063 c
850.988 258.309 891.598 242.879 932.918 229.703 c
976.992 215.652 1021.87 204.156 1067.17 194.809 c
1106.87 186.613 1146.91 180.07 1187.17 175.371 c
1230.73 170.281 1274.56 167.363 1318.42 166.895 c
1373.29 166.305 1428.17 169.543 1482.67 175.863 c
1527.76 181.102 1572.61 188.445 1616.92 198.301 c
1659.48 207.762 1701.52 219.527 1742.92 233.195 c
1786.55 247.598 1829.52 264.129 1871.17 283.543 c
1880.49 287.883 1889.74 292.371 1898.92 297 c
Q
S
1 1 1 0 k
1 1 1 0 K
q
0.3 0 0 0.3 13.55 414.7 cm
254.906 915.355 m
267.625 882.527 282.676 850.605 299.918 819.914 c
328.246 769.488 362.438 722.461 400.418 678.844 c
429.418 645.543 460.633 614.203 493.418 584.629 c
518.379 562.109 544.25 540.609 570.668 519.82 c
596.656 499.379 623.184 479.613 650.168 460.504 c
681.531 438.293 713.516 416.957 746.168 396.695 c
780.035 375.688 814.613 355.836 849.668 336.879 c
899.156 310.113 949.613 285.121 1001.17 262.605 c
1044.66 243.609 1088.93 226.383 1133.92 211.262 c
1172.96 198.137 1212.52 186.598 1252.42 176.363 c
1310.61 161.445 1369.49 149.309 1428.67 138.98 c
1472.27 131.371 1516.03 124.738 1559.92 119.039 c
1630.46 109.883 1701.29 103.137 1772.17 97.1055 c
1814.15 93.5313 1856.15 90.2109 1898.17 87.1367 c
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
255.668 948.027 m
265.441 921.027 280.273 895.871 299.168 874.25 c
319.305 851.211 343.785 832.383 368.918 814.93 c
411.461 785.391 456.352 759.336 502.418 735.672 c
557.871 707.184 615.027 682.145 672.668 658.402 c
724.063 637.238 775.871 617.086 827.918 597.59 c
871.527 581.254 915.305 565.375 959.168 549.734 c
1019.3 528.293 1079.59 507.309 1139.92 486.426 c
1197.21 466.598 1254.53 446.863 1311.67 426.605 c
1361.35 408.996 1410.89 390.988 1460.17 372.273 c
1508.53 353.902 1556.63 334.844 1604.17 314.445 c
1649.79 294.875 1694.92 274.055 1738.42 250.145 c
1768.82 233.434 1798.48 215.164 1825.42 193.316 c
1847.3 175.563 1867.42 155.371 1883.17 132 c
1889.06 123.254 1894.33 114.082 1898.92 104.582 c
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 86.1406 m
1898.92 86.1406 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
528.668 86.1406 m
528.668 77.6641 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1076.92 86.1406 m
1076.92 77.6641 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1625.17 86.1406 m
1625.17 77.6641 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 86.1406 m
254.168 69.1914 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
802.418 86.1406 m
802.418 69.1914 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1350.67 86.1406 m
1350.67 69.1914 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 86.1406 m
1898.92 69.1914 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 86.1406 m
254.168 966.969 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 228.211 m
241.418 228.211 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 512.348 m
241.418 512.348 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 796.484 m
241.418 796.484 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 86.1406 m
228.668 86.1406 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 370.277 m
228.668 370.277 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 654.418 m
228.668 654.418 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.168 938.555 m
228.668 938.555 L
Q
S
-1.42109e-016 1 1 0 k
-1.42109e-016 1 1 0 K
[10 4] 0 d
q
0.3 0 0 0.3 13.55 414.7 cm
255.668 948.027 m
263.031 929.387 273.18 911.852 285.668 896.184 c
300.121 878.055 317.59 862.527 335.918 848.328 c
360.785 829.066 387.359 812.086 414.668 796.484 c
447.602 777.672 481.625 760.84 515.918 744.645 c
547.137 729.898 578.602 715.668 610.418 702.27 c
645.848 687.355 681.703 673.473 717.668 659.898 c
767.477 641.105 817.508 622.895 867.668 605.066 c
915.086 588.211 962.621 571.695 1010.17 555.219 c
1053.91 540.059 1097.66 524.938 1141.42 509.855 c
1185.46 494.68 1229.51 479.547 1273.42 463.988 c
1325.14 445.672 1376.66 426.77 1427.92 407.168 c
1466.61 392.363 1505.15 377.168 1543.42 361.305 c
1590.39 341.832 1636.99 321.34 1682.17 297.996 c
1715.8 280.625 1748.61 261.688 1780.42 241.168 c
1807.12 223.945 1833.34 205.402 1854.67 181.852 c
1874.82 159.594 1890.25 133.09 1899.67 104.582 c
Q
S
1 1 1 0 k
1 1 1 0 K
[] 0 d
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 86.1406 m
1898.92 966.969 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 228.211 m
1911.67 228.211 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 512.348 m
1911.67 512.348 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 796.484 m
1911.67 796.484 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 86.1406 m
1924.42 86.1406 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 370.277 m
1924.42 370.277 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 654.418 m
1924.42 654.418 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
1898.92 938.555 m
1924.42 938.555 L
Q
S
q
0.3 0 0 0.3 13.55 414.7 cm
254.512 947.926 m
264.074 922.59 276.695 898.414 292.012 876.086 c
318.98 836.777 353.973 803.602 391.016 773.602 c
472.793 707.375 565.246 655.566 659.527 608.82 c
787.844 545.211 920.355 490.402 1054.04 439.023 c
1209 379.469 1365.68 324.445 1520.56 264.703 c
1609.16 230.523 1697.22 194.777 1783.07 154.18 c
1822.06 135.738 1860.58 116.309 1898.58 95.9023 c
Q
S
[1 0 0 1 -3.692 9.968] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(0) 87.4432 402.967 tpt
T
[1 0 0 1 154.2 9.038] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(20) 87.4432 402.967 tpt
T
[1 0 0 1 319.5 9.408] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(40) 87.4432 402.967 tpt
T
[1 0 0 1 482.3 9.038] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(60) 87.4432 402.967 tpt
T
[1 0 0 1 -36.66 284.7] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(1.5) 87.4432 402.967 tpt
T
[1 0 0 1 -37.71 199.6] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(1.0) 87.4432 402.967 tpt
T
[1 0 0 1 -19.17 29.22] e
87.4432 424.351 87.4432 424.351 tbx
0 tal
26 tld
/_Times-Roman 24 tfn
(0) 87.4432 402.967 tpt
T
[0 1 -1 0 429.2 163.6] e
322.77 390.75 322.77 390.75 tbx
0 tal
35 tld
/_Symbol 32 tfn
(q) 322.77 358.59 tpt
/_Times-Roman 32 tfn
( \(rad\)) 339.442 358.59 tpt
T
[1 0 0 1 -0.6708 20.12] e
546.141 552.41 546.141 552.41 tbx
0 tal
22 tld
/_Symbol 20 tfn
(1) 546.141 532.31 tpt
T
[1 0 0 1 17.81 -31.02] e
546.141 552.41 546.141 552.41 tbx
0 tal
22 tld
/_Symbol 20 tfn
(2) 546.141 532.31 tpt
T
[1 0 0 1 -316.9 7.219] e
546.141 552.41 546.141 552.41 tbx
0 tal
22 tld
/_Symbol 20 tfn
(3) 546.141 532.31 tpt
T
[1 0 0 1 -251.2 9.231] e
546.141 552.41 546.141 552.41 tbx
0 tal
22 tld
/_Symbol 20 tfn
(4) 546.141 532.31 tpt
T
[1 0 0 1 -178.7 6.548] e
546.141 552.41 546.141 552.41 tbx
0 tal
22 tld
/_Symbol 20 tfn
(5) 546.141 532.31 tpt
T
%%PageTrailer
_PDX_savepage restore
%%Trailer
end
% showpage
%%EOF
